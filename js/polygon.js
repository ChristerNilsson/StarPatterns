// Generated by CoffeeScript 1.12.7
var Polygon;

Polygon = (function() {
  function Polygon() {
    this.vertices = [];
    this.edges = [];
  }

  Polygon.prototype.addVertex = function(x, y) {
    var a, edge, prev, total;
    a = createVector(x, y);
    total = this.vertices.length;
    if (total > 0) {
      prev = this.vertices[total - 1];
      edge = new Edge(prev, a);
      this.edges.push(edge);
    }
    return this.vertices.push(a);
  };

  Polygon.prototype.close = function() {
    var edge, first, last, total;
    total = this.vertices.length;
    last = this.vertices[total - 1];
    first = this.vertices[0];
    edge = new Edge(last, first);
    return this.edges.push(edge);
  };

  Polygon.prototype.hankin = function() {
    var a, b, edge, i, j, len, len1, ref, ref1, results;
    ref = this.edges;
    for (i = 0, len = ref.length; i < len; i++) {
      edge = ref[i];
      edge.hankin();
    }
    ref1 = this.edges;
    results = [];
    for (j = 0, len1 = ref1.length; j < len1; j++) {
      a = ref1[j];
      results.push((function() {
        var k, len2, ref2, results1;
        ref2 = this.edges;
        results1 = [];
        for (k = 0, len2 = ref2.length; k < len2; k++) {
          b = ref2[k];
          if (a !== b) {
            results1.push(a.findEnds(b));
          } else {
            results1.push(void 0);
          }
        }
        return results1;
      }).call(this));
    }
    return results;
  };

  Polygon.prototype.show = function() {
    var edge, i, len, ref, results;
    ref = this.edges;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      edge = ref[i];
      results.push(edge.show());
    }
    return results;
  };

  return Polygon;

})();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9seWdvbi5qcyIsInNvdXJjZVJvb3QiOiIuLiIsInNvdXJjZXMiOlsiY29mZmVlXFxwb2x5Z29uLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQTs7QUFBTTtFQUNVLGlCQUFBO0lBQ1osSUFBQyxDQUFBLFFBQUQsR0FBWTtJQUNaLElBQUMsQ0FBQSxLQUFELEdBQVM7RUFGRzs7b0JBSWQsU0FBQSxHQUFZLFNBQUMsQ0FBRCxFQUFJLENBQUo7QUFDVixRQUFBO0lBQUEsQ0FBQSxHQUFJLFlBQUEsQ0FBYSxDQUFiLEVBQWdCLENBQWhCO0lBQ0osS0FBQSxHQUFRLElBQUMsQ0FBQSxRQUFRLENBQUM7SUFDbEIsSUFBRyxLQUFBLEdBQVEsQ0FBWDtNQUNFLElBQUEsR0FBTyxJQUFDLENBQUEsUUFBUyxDQUFBLEtBQUEsR0FBUSxDQUFSO01BQ2pCLElBQUEsR0FBTyxJQUFJLElBQUosQ0FBUyxJQUFULEVBQWUsQ0FBZjtNQUNQLElBQUMsQ0FBQSxLQUFLLENBQUMsSUFBUCxDQUFZLElBQVosRUFIRjs7V0FJQSxJQUFDLENBQUEsUUFBUSxDQUFDLElBQVYsQ0FBZSxDQUFmO0VBUFU7O29CQVNaLEtBQUEsR0FBUSxTQUFBO0FBQ04sUUFBQTtJQUFBLEtBQUEsR0FBUSxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3RCLElBQUEsR0FBTyxJQUFJLENBQUMsUUFBUyxDQUFBLEtBQUEsR0FBUSxDQUFSO0lBQ3JCLEtBQUEsR0FBUSxJQUFJLENBQUMsUUFBUyxDQUFBLENBQUE7SUFDdEIsSUFBQSxHQUFPLElBQUksSUFBSixDQUFTLElBQVQsRUFBZSxLQUFmO1dBQ1AsSUFBQyxDQUFBLEtBQUssQ0FBQyxJQUFQLENBQVksSUFBWjtFQUxNOztvQkFPUixNQUFBLEdBQVMsU0FBQTtBQUNQLFFBQUE7QUFBQTtBQUFBLFNBQUEscUNBQUE7O01BQ0UsSUFBSSxDQUFDLE1BQUwsQ0FBQTtBQURGO0FBR0E7QUFBQTtTQUFBLHdDQUFBOzs7O0FBQ0U7QUFBQTthQUFBLHdDQUFBOztVQUNFLElBQUcsQ0FBQSxLQUFHLENBQU47MEJBQ0UsQ0FBQyxDQUFDLFFBQUYsQ0FBVyxDQUFYLEdBREY7V0FBQSxNQUFBO2tDQUFBOztBQURGOzs7QUFERjs7RUFKTzs7b0JBUVQsSUFBQSxHQUFPLFNBQUE7QUFDTCxRQUFBO0FBQUE7QUFBQTtTQUFBLHFDQUFBOzttQkFDRSxJQUFJLENBQUMsSUFBTCxDQUFBO0FBREY7O0VBREsiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBQb2x5Z29uXHJcbiAgY29uc3RydWN0b3IgOiAtPlxyXG4gICAgQHZlcnRpY2VzID0gW11cclxuICAgIEBlZGdlcyA9IFtdXHJcblxyXG4gIGFkZFZlcnRleCA6ICh4LCB5KSAtPlxyXG4gICAgYSA9IGNyZWF0ZVZlY3RvciB4LCB5XHJcbiAgICB0b3RhbCA9IEB2ZXJ0aWNlcy5sZW5ndGhcclxuICAgIGlmIHRvdGFsID4gMFxyXG4gICAgICBwcmV2ID0gQHZlcnRpY2VzW3RvdGFsIC0gMV1cclxuICAgICAgZWRnZSA9IG5ldyBFZGdlIHByZXYsIGFcclxuICAgICAgQGVkZ2VzLnB1c2ggZWRnZVxyXG4gICAgQHZlcnRpY2VzLnB1c2ggYVxyXG5cclxuICBjbG9zZSA6IC0+XHJcbiAgICB0b3RhbCA9IHRoaXMudmVydGljZXMubGVuZ3RoXHJcbiAgICBsYXN0ID0gdGhpcy52ZXJ0aWNlc1t0b3RhbCAtIDFdXHJcbiAgICBmaXJzdCA9IHRoaXMudmVydGljZXNbMF1cclxuICAgIGVkZ2UgPSBuZXcgRWRnZSBsYXN0LCBmaXJzdFxyXG4gICAgQGVkZ2VzLnB1c2ggZWRnZVxyXG5cclxuICBoYW5raW4gOiAtPlxyXG4gICAgZm9yIGVkZ2UgaW4gQGVkZ2VzXHJcbiAgICAgIGVkZ2UuaGFua2luKClcclxuXHJcbiAgICBmb3IgYSBpbiBAZWRnZXNcclxuICAgICAgZm9yIGIgaW4gQGVkZ2VzXHJcbiAgICAgICAgaWYgYSE9YlxyXG4gICAgICAgICAgYS5maW5kRW5kcyBiXHJcbiAgc2hvdyA6IC0+XHJcbiAgICBmb3IgZWRnZSBpbiBAZWRnZXNcclxuICAgICAgZWRnZS5zaG93KCkiXX0=
//# sourceURL=C:\github\StarPatterns\coffee\polygon.coffee