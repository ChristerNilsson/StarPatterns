// Generated by CoffeeScript 1.12.7
var angle, angleSlider, chooseTiling, delta, deltaSlider, draw, hexTiling, polys, setup, squareTiling, tilingTypeSelect;

polys = [];

angle = 75;

delta = 10;

deltaSlider = null;

angleSlider = null;

tilingTypeSelect = null;

setup = function() {
  createCanvas(400, 400);
  background(51);
  deltaSlider = createSlider(0, 25, 10);
  angleSlider = createSlider(0, 90, 75);
  tilingTypeSelect = createSelect();
  tilingTypeSelect.option('square');
  tilingTypeSelect.option('hexagonal');
  tilingTypeSelect.changed(chooseTiling);
  return chooseTiling();
};

draw = function() {
  var i, len, poly, results;
  background(51);
  angle = angleSlider.value();
  delta = deltaSlider.value();
  results = [];
  for (i = 0, len = polys.length; i < len; i++) {
    poly = polys[i];
    poly.hankin();
    results.push(poly.show());
  }
  return results;
};

hexTiling = function() {
  var hexTiles;
  hexTiles = new HexagonalTiling(50);
  hexTiles.BuildGrid();
  return polys = hexTiles.polys;
};

squareTiling = function() {
  var i, inc, len, poly, ref, results, x, y;
  polys = [];
  inc = 100;
  ref = range(0, width, inc);
  results = [];
  for (i = 0, len = ref.length; i < len; i++) {
    x = ref[i];
    results.push((function() {
      var j, len1, ref1, results1;
      ref1 = range(0, height, inc);
      results1 = [];
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        y = ref1[j];
        poly = new Polygon();
        poly.addVertex(x, y);
        poly.addVertex(x + inc, y);
        poly.addVertex(x + inc, y + inc);
        poly.addVertex(x, y + inc);
        poly.close();
        results1.push(polys.push(poly));
      }
      return results1;
    })());
  }
  return results;
};

chooseTiling = function() {
  if (tilingTypeSelect.value() === 'hexagonal') {
    return hexTiling();
  } else {
    return squareTiling();
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUE7O0FBQUEsS0FBQSxHQUFROztBQUVSLEtBQUEsR0FBUTs7QUFDUixLQUFBLEdBQVE7O0FBRVIsV0FBQSxHQUFjOztBQUNkLFdBQUEsR0FBYzs7QUFDZCxnQkFBQSxHQUFtQjs7QUFFbkIsS0FBQSxHQUFRLFNBQUE7RUFDTixZQUFBLENBQWEsR0FBYixFQUFrQixHQUFsQjtFQUNBLFVBQUEsQ0FBVyxFQUFYO0VBQ0EsV0FBQSxHQUFjLFlBQUEsQ0FBYSxDQUFiLEVBQWdCLEVBQWhCLEVBQW9CLEVBQXBCO0VBQ2QsV0FBQSxHQUFjLFlBQUEsQ0FBYSxDQUFiLEVBQWdCLEVBQWhCLEVBQW9CLEVBQXBCO0VBQ2QsZ0JBQUEsR0FBbUIsWUFBQSxDQUFBO0VBQ25CLGdCQUFnQixDQUFDLE1BQWpCLENBQXdCLFFBQXhCO0VBQ0EsZ0JBQWdCLENBQUMsTUFBakIsQ0FBd0IsV0FBeEI7RUFDQSxnQkFBZ0IsQ0FBQyxPQUFqQixDQUF5QixZQUF6QjtTQUNBLFlBQUEsQ0FBQTtBQVRNOztBQVdSLElBQUEsR0FBTyxTQUFBO0FBQ0wsTUFBQTtFQUFBLFVBQUEsQ0FBVyxFQUFYO0VBQ0EsS0FBQSxHQUFRLFdBQVcsQ0FBQyxLQUFaLENBQUE7RUFDUixLQUFBLEdBQVEsV0FBVyxDQUFDLEtBQVosQ0FBQTtBQUNSO09BQUEsdUNBQUE7O0lBQ0UsSUFBSSxDQUFDLE1BQUwsQ0FBQTtpQkFDQSxJQUFJLENBQUMsSUFBTCxDQUFBO0FBRkY7O0FBSks7O0FBUVAsU0FBQSxHQUFZLFNBQUE7QUFDVixNQUFBO0VBQUEsUUFBQSxHQUFXLElBQUksZUFBSixDQUFvQixFQUFwQjtFQUNYLFFBQVEsQ0FBQyxTQUFULENBQUE7U0FDQSxLQUFBLEdBQVEsUUFBUSxDQUFDO0FBSFA7O0FBS1osWUFBQSxHQUFlLFNBQUE7QUFDYixNQUFBO0VBQUEsS0FBQSxHQUFRO0VBQ1IsR0FBQSxHQUFNO0FBQ047QUFBQTtPQUFBLHFDQUFBOzs7O0FBQ0U7QUFBQTtXQUFBLHdDQUFBOztRQUNFLElBQUEsR0FBTyxJQUFJLE9BQUosQ0FBQTtRQUNQLElBQUksQ0FBQyxTQUFMLENBQWUsQ0FBZixFQUFrQixDQUFsQjtRQUNBLElBQUksQ0FBQyxTQUFMLENBQWUsQ0FBQSxHQUFJLEdBQW5CLEVBQXdCLENBQXhCO1FBQ0EsSUFBSSxDQUFDLFNBQUwsQ0FBZSxDQUFBLEdBQUksR0FBbkIsRUFBd0IsQ0FBQSxHQUFJLEdBQTVCO1FBQ0EsSUFBSSxDQUFDLFNBQUwsQ0FBZSxDQUFmLEVBQWtCLENBQUEsR0FBSSxHQUF0QjtRQUNBLElBQUksQ0FBQyxLQUFMLENBQUE7c0JBQ0EsS0FBSyxDQUFDLElBQU4sQ0FBVyxJQUFYO0FBUEY7OztBQURGOztBQUhhOztBQWFmLFlBQUEsR0FBZSxTQUFBO0VBQUcsSUFBRyxnQkFBZ0IsQ0FBQyxLQUFqQixDQUFBLENBQUEsS0FBNEIsV0FBL0I7V0FBZ0QsU0FBQSxDQUFBLEVBQWhEO0dBQUEsTUFBQTtXQUFpRSxZQUFBLENBQUEsRUFBakU7O0FBQUgiLCJzb3VyY2VzQ29udGVudCI6WyJwb2x5cyA9IFtdXHJcblxyXG5hbmdsZSA9IDc1XHJcbmRlbHRhID0gMTBcclxuXHJcbmRlbHRhU2xpZGVyID0gbnVsbFxyXG5hbmdsZVNsaWRlciA9IG51bGxcclxudGlsaW5nVHlwZVNlbGVjdCA9IG51bGxcclxuXHJcbnNldHVwID0gLT5cclxuICBjcmVhdGVDYW52YXMgNDAwLCA0MDBcclxuICBiYWNrZ3JvdW5kIDUxXHJcbiAgZGVsdGFTbGlkZXIgPSBjcmVhdGVTbGlkZXIgMCwgMjUsIDEwXHJcbiAgYW5nbGVTbGlkZXIgPSBjcmVhdGVTbGlkZXIgMCwgOTAsIDc1XHJcbiAgdGlsaW5nVHlwZVNlbGVjdCA9IGNyZWF0ZVNlbGVjdCgpXHJcbiAgdGlsaW5nVHlwZVNlbGVjdC5vcHRpb24gJ3NxdWFyZSdcclxuICB0aWxpbmdUeXBlU2VsZWN0Lm9wdGlvbiAnaGV4YWdvbmFsJ1xyXG4gIHRpbGluZ1R5cGVTZWxlY3QuY2hhbmdlZCBjaG9vc2VUaWxpbmdcclxuICBjaG9vc2VUaWxpbmcoKVxyXG5cclxuZHJhdyA9IC0+XHJcbiAgYmFja2dyb3VuZCA1MVxyXG4gIGFuZ2xlID0gYW5nbGVTbGlkZXIudmFsdWUoKVxyXG4gIGRlbHRhID0gZGVsdGFTbGlkZXIudmFsdWUoKVxyXG4gIGZvciBwb2x5IGluIHBvbHlzXHJcbiAgICBwb2x5LmhhbmtpbigpXHJcbiAgICBwb2x5LnNob3coKVxyXG5cclxuaGV4VGlsaW5nID0gLT5cclxuICBoZXhUaWxlcyA9IG5ldyBIZXhhZ29uYWxUaWxpbmcgNTBcclxuICBoZXhUaWxlcy5CdWlsZEdyaWQoKVxyXG4gIHBvbHlzID0gaGV4VGlsZXMucG9seXNcclxuXHJcbnNxdWFyZVRpbGluZyA9IC0+XHJcbiAgcG9seXMgPSBbXVxyXG4gIGluYyA9IDEwMFxyXG4gIGZvciB4IGluIHJhbmdlIDAsd2lkdGgsaW5jXHJcbiAgICBmb3IgeSBpbiByYW5nZSAwLGhlaWdodCxpbmNcclxuICAgICAgcG9seSA9IG5ldyBQb2x5Z29uKClcclxuICAgICAgcG9seS5hZGRWZXJ0ZXggeCwgeVxyXG4gICAgICBwb2x5LmFkZFZlcnRleCB4ICsgaW5jLCB5XHJcbiAgICAgIHBvbHkuYWRkVmVydGV4IHggKyBpbmMsIHkgKyBpbmNcclxuICAgICAgcG9seS5hZGRWZXJ0ZXggeCwgeSArIGluY1xyXG4gICAgICBwb2x5LmNsb3NlKClcclxuICAgICAgcG9seXMucHVzaCBwb2x5XHJcblxyXG5jaG9vc2VUaWxpbmcgPSAtPiBpZiB0aWxpbmdUeXBlU2VsZWN0LnZhbHVlKCkgPT0gJ2hleGFnb25hbCcgdGhlbiBoZXhUaWxpbmcoKSBlbHNlIHNxdWFyZVRpbGluZygpIl19
//# sourceURL=C:\github\StarPatterns\coffee\sketch.coffee