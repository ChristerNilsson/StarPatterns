// Generated by CoffeeScript 1.11.1
var angle, angleSlider, chooseTiling, delta, deltaSlider, draw, hexTiling, polys, setup, squareTiling, tilingTypeSelect;

polys = [];

angle = 75;

delta = 10;

deltaSlider = null;

angleSlider = null;

tilingTypeSelect = null;

setup = function() {
  createCanvas(400, 400);
  background(51);
  deltaSlider = createSlider(0, 25, 10);
  angleSlider = createSlider(0, 90, 75);
  tilingTypeSelect = createSelect();
  tilingTypeSelect.option('square');
  tilingTypeSelect.option('hexagonal');
  tilingTypeSelect.changed(chooseTiling);
  return chooseTiling();
};

draw = function() {
  var i, len, poly, results;
  background(51);
  angle = angleSlider.value();
  delta = deltaSlider.value();
  results = [];
  for (i = 0, len = polys.length; i < len; i++) {
    poly = polys[i];
    poly.hankin();
    results.push(poly.show());
  }
  return results;
};

hexTiling = function() {
  var hexTiles;
  hexTiles = new HexagonalTiling(50);
  hexTiles.BuildGrid();
  return polys = hexTiles.polys;
};

squareTiling = function() {
  var i, inc, len, poly, ref, results, x, y;
  polys = [];
  inc = 100;
  ref = range(0, width, inc);
  results = [];
  for (i = 0, len = ref.length; i < len; i++) {
    x = ref[i];
    results.push((function() {
      var j, len1, ref1, results1;
      ref1 = range(0, height, inc);
      results1 = [];
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        y = ref1[j];
        poly = new Polygon();
        poly.addVertex(x, y);
        poly.addVertex(x + inc, y);
        poly.addVertex(x + inc, y + inc);
        poly.addVertex(x, y + inc);
        poly.close();
        results1.push(polys.push(poly));
      }
      return results1;
    })());
  }
  return results;
};

chooseTiling = function() {
  if (tilingTypeSelect.value() === 'hexagonal') {
    return hexTiling();
  } else {
    return squareTiling();
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic2tldGNoLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQTs7QUFBQSxLQUFBLEdBQVE7O0FBRVIsS0FBQSxHQUFROztBQUNSLEtBQUEsR0FBUTs7QUFFUixXQUFBLEdBQWM7O0FBQ2QsV0FBQSxHQUFjOztBQUNkLGdCQUFBLEdBQW1COztBQUVuQixLQUFBLEdBQVEsU0FBQTtFQUNOLFlBQUEsQ0FBYSxHQUFiLEVBQWtCLEdBQWxCO0VBQ0EsVUFBQSxDQUFXLEVBQVg7RUFDQSxXQUFBLEdBQWMsWUFBQSxDQUFhLENBQWIsRUFBZ0IsRUFBaEIsRUFBb0IsRUFBcEI7RUFDZCxXQUFBLEdBQWMsWUFBQSxDQUFhLENBQWIsRUFBZ0IsRUFBaEIsRUFBb0IsRUFBcEI7RUFDZCxnQkFBQSxHQUFtQixZQUFBLENBQUE7RUFDbkIsZ0JBQWdCLENBQUMsTUFBakIsQ0FBd0IsUUFBeEI7RUFDQSxnQkFBZ0IsQ0FBQyxNQUFqQixDQUF3QixXQUF4QjtFQUNBLGdCQUFnQixDQUFDLE9BQWpCLENBQXlCLFlBQXpCO1NBQ0EsWUFBQSxDQUFBO0FBVE07O0FBV1IsSUFBQSxHQUFPLFNBQUE7QUFDTCxNQUFBO0VBQUEsVUFBQSxDQUFXLEVBQVg7RUFDQSxLQUFBLEdBQVEsV0FBVyxDQUFDLEtBQVosQ0FBQTtFQUNSLEtBQUEsR0FBUSxXQUFXLENBQUMsS0FBWixDQUFBO0FBQ1I7T0FBQSx1Q0FBQTs7SUFDRSxJQUFJLENBQUMsTUFBTCxDQUFBO2lCQUNBLElBQUksQ0FBQyxJQUFMLENBQUE7QUFGRjs7QUFKSzs7QUFRUCxTQUFBLEdBQVksU0FBQTtBQUNWLE1BQUE7RUFBQSxRQUFBLEdBQWUsSUFBQSxlQUFBLENBQWdCLEVBQWhCO0VBQ2YsUUFBUSxDQUFDLFNBQVQsQ0FBQTtTQUNBLEtBQUEsR0FBUSxRQUFRLENBQUM7QUFIUDs7QUFLWixZQUFBLEdBQWUsU0FBQTtBQUNiLE1BQUE7RUFBQSxLQUFBLEdBQVE7RUFDUixHQUFBLEdBQU07QUFDTjtBQUFBO09BQUEscUNBQUE7Ozs7QUFDRTtBQUFBO1dBQUEsd0NBQUE7O1FBQ0UsSUFBQSxHQUFXLElBQUEsT0FBQSxDQUFBO1FBQ1gsSUFBSSxDQUFDLFNBQUwsQ0FBZSxDQUFmLEVBQWtCLENBQWxCO1FBQ0EsSUFBSSxDQUFDLFNBQUwsQ0FBZSxDQUFBLEdBQUksR0FBbkIsRUFBd0IsQ0FBeEI7UUFDQSxJQUFJLENBQUMsU0FBTCxDQUFlLENBQUEsR0FBSSxHQUFuQixFQUF3QixDQUFBLEdBQUksR0FBNUI7UUFDQSxJQUFJLENBQUMsU0FBTCxDQUFlLENBQWYsRUFBa0IsQ0FBQSxHQUFJLEdBQXRCO1FBQ0EsSUFBSSxDQUFDLEtBQUwsQ0FBQTtzQkFDQSxLQUFLLENBQUMsSUFBTixDQUFXLElBQVg7QUFQRjs7O0FBREY7O0FBSGE7O0FBYWYsWUFBQSxHQUFlLFNBQUE7RUFBRyxJQUFHLGdCQUFnQixDQUFDLEtBQWpCLENBQUEsQ0FBQSxLQUE0QixXQUEvQjtXQUFnRCxTQUFBLENBQUEsRUFBaEQ7R0FBQSxNQUFBO1dBQWlFLFlBQUEsQ0FBQSxFQUFqRTs7QUFBSCIsInNvdXJjZXNDb250ZW50IjpbInBvbHlzID0gW11cclxuXHJcbmFuZ2xlID0gNzVcclxuZGVsdGEgPSAxMFxyXG5cclxuZGVsdGFTbGlkZXIgPSBudWxsXHJcbmFuZ2xlU2xpZGVyID0gbnVsbFxyXG50aWxpbmdUeXBlU2VsZWN0ID0gbnVsbFxyXG5cclxuc2V0dXAgPSAtPlxyXG4gIGNyZWF0ZUNhbnZhcyA0MDAsIDQwMFxyXG4gIGJhY2tncm91bmQgNTFcclxuICBkZWx0YVNsaWRlciA9IGNyZWF0ZVNsaWRlciAwLCAyNSwgMTBcclxuICBhbmdsZVNsaWRlciA9IGNyZWF0ZVNsaWRlciAwLCA5MCwgNzVcclxuICB0aWxpbmdUeXBlU2VsZWN0ID0gY3JlYXRlU2VsZWN0KClcclxuICB0aWxpbmdUeXBlU2VsZWN0Lm9wdGlvbiAnc3F1YXJlJ1xyXG4gIHRpbGluZ1R5cGVTZWxlY3Qub3B0aW9uICdoZXhhZ29uYWwnXHJcbiAgdGlsaW5nVHlwZVNlbGVjdC5jaGFuZ2VkIGNob29zZVRpbGluZ1xyXG4gIGNob29zZVRpbGluZygpXHJcblxyXG5kcmF3ID0gLT5cclxuICBiYWNrZ3JvdW5kIDUxXHJcbiAgYW5nbGUgPSBhbmdsZVNsaWRlci52YWx1ZSgpXHJcbiAgZGVsdGEgPSBkZWx0YVNsaWRlci52YWx1ZSgpXHJcbiAgZm9yIHBvbHkgaW4gcG9seXNcclxuICAgIHBvbHkuaGFua2luKClcclxuICAgIHBvbHkuc2hvdygpXHJcblxyXG5oZXhUaWxpbmcgPSAtPlxyXG4gIGhleFRpbGVzID0gbmV3IEhleGFnb25hbFRpbGluZyA1MFxyXG4gIGhleFRpbGVzLkJ1aWxkR3JpZCgpXHJcbiAgcG9seXMgPSBoZXhUaWxlcy5wb2x5c1xyXG5cclxuc3F1YXJlVGlsaW5nID0gLT5cclxuICBwb2x5cyA9IFtdXHJcbiAgaW5jID0gMTAwXHJcbiAgZm9yIHggaW4gcmFuZ2UgMCx3aWR0aCxpbmNcclxuICAgIGZvciB5IGluIHJhbmdlIDAsaGVpZ2h0LGluY1xyXG4gICAgICBwb2x5ID0gbmV3IFBvbHlnb24oKVxyXG4gICAgICBwb2x5LmFkZFZlcnRleCB4LCB5XHJcbiAgICAgIHBvbHkuYWRkVmVydGV4IHggKyBpbmMsIHlcclxuICAgICAgcG9seS5hZGRWZXJ0ZXggeCArIGluYywgeSArIGluY1xyXG4gICAgICBwb2x5LmFkZFZlcnRleCB4LCB5ICsgaW5jXHJcbiAgICAgIHBvbHkuY2xvc2UoKVxyXG4gICAgICBwb2x5cy5wdXNoIHBvbHlcclxuXHJcbmNob29zZVRpbGluZyA9IC0+IGlmIHRpbGluZ1R5cGVTZWxlY3QudmFsdWUoKSA9PSAnaGV4YWdvbmFsJyB0aGVuIGhleFRpbGluZygpIGVsc2Ugc3F1YXJlVGlsaW5nKCkiXX0=
//# sourceURL=C:\github\StarPatterns\sketch.coffee